<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.TransactionMapper">

    <resultMap id="BaseResultMap" type="com.example.springboot.entity.Transaction">
            <id property="id" column="id" jdbcType="VARCHAR"/>
            <result property="buyerId" column="user_id" jdbcType="INTEGER"/>
            <result property="productId" column="product_id" jdbcType="INTEGER"/>
            <result property="sellerId" column="seller_id" jdbcType="INTEGER"/>
            <result property="sellerId" column="seller_id" jdbcType="INTEGER"/>
            <result property="price" column="price" jdbcType="INTEGER"/>
            <result property="createTime" column="create_time" jdbcType="VARCHAR"/>
            <result property="state" column="state" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,buyer_id,product_id,seller_id,price,create_time,state
    </sql>

    <select id="selectPageById" resultType="map">
        select t.*,buyer.username buyer_username ,seller.username seller_username from transaction t left join user buyer on t.buyer_id=buyer.id left join user seller on t.seller_id=seller.id
        <if test="id != null">
            where t.id=#{id}
        </if>
        order by t.id desc
    </select>

    <select id="selectAllInfoByBuyerId" resultType="java.util.Map">
        select t.*,p.name product_name,p.image product_image,u.nickname seller_nickname,u.avatar seller_avatar from transaction t
        left join product p on p.id = t.product_id
        left join user u on seller_username=u.username
        where t.buyer_id=#{userId} and t.state=#{transactionState}


    </select>
    <select id="getOneByUserId" resultType="com.example.springboot.entity.Transaction">
        select * from transaction where buyer_id=#{userId}
    </select>


</mapper>
